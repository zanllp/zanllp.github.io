{"version":3,"file":"js/app.869ecae1.js","mappings":"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","sources":["webpack://extendable-viewer/./asset/vrm/girl.vrm","webpack://extendable-viewer/./src/vrm/clip.ts","webpack://extendable-viewer/./src/vrm/controller.ts","webpack://extendable-viewer/./src/util/dumpObject.ts","webpack://extendable-viewer/./src/vrm/pose.ts","webpack://extendable-viewer/./src/vrm/blendshape.ts","webpack://extendable-viewer/./src/3d/index.ts","webpack://extendable-viewer/./src/app.ts","webpack://extendable-viewer/./src/registerServiceWorker.ts","webpack://extendable-viewer/./src/main.ts","webpack://extendable-viewer/webpack/bootstrap","webpack://extendable-viewer/webpack/runtime/chunk loaded","webpack://extendable-viewer/webpack/runtime/compat get default export","webpack://extendable-viewer/webpack/runtime/define property getters","webpack://extendable-viewer/webpack/runtime/global","webpack://extendable-viewer/webpack/runtime/hasOwnProperty shorthand","webpack://extendable-viewer/webpack/runtime/publicPath","webpack://extendable-viewer/webpack/runtime/jsonp chunk loading","webpack://extendable-viewer/webpack/startup"],"sourcesContent":["module.exports = __webpack_public_path__ + \"290feb9fd69f68e66efa261311465406.vrm\";","import * as THREE from 'three'\nimport { VRM, VRMSchema } from '@pixiv/three-vrm'\n\nconst BONE_NAME_LIST: VRMSchema.HumanoidBoneName[] = [\n  VRMSchema.HumanoidBoneName.Head,\n  VRMSchema.HumanoidBoneName.Neck,\n  VRMSchema.HumanoidBoneName.Chest,\n  VRMSchema.HumanoidBoneName.Spine,\n  VRMSchema.HumanoidBoneName.Hips,\n  VRMSchema.HumanoidBoneName.RightShoulder,\n  VRMSchema.HumanoidBoneName.RightUpperArm,\n  VRMSchema.HumanoidBoneName.RightLowerArm,\n  VRMSchema.HumanoidBoneName.RightHand,\n  VRMSchema.HumanoidBoneName.LeftShoulder,\n  VRMSchema.HumanoidBoneName.LeftUpperArm,\n  VRMSchema.HumanoidBoneName.LeftLowerArm,\n  VRMSchema.HumanoidBoneName.LeftHand,\n  VRMSchema.HumanoidBoneName.RightUpperLeg,\n  VRMSchema.HumanoidBoneName.RightLowerLeg,\n  VRMSchema.HumanoidBoneName.RightFoot,\n  VRMSchema.HumanoidBoneName.LeftUpperLeg,\n  VRMSchema.HumanoidBoneName.LeftLowerLeg,\n  VRMSchema.HumanoidBoneName.LeftFoot\n]\n\nconst MIXAMO_ID_LIST: string[] = [\n  'mixamorigHead',\n  'mixamorigNeck',\n  'mixamorigSpine2',\n  'mixamorigSpine',\n  'mixamorigHips',\n  'mixamorigRightShoulder',\n  'mixamorigRightArm',\n  'mixamorigRightForeArm',\n  'mixamorigRightHand',\n  'mixamorigLeftShoulder',\n  'mixamorigLeftArm',\n  'mixamorigLeftForeArm',\n  'mixamorigLeftHand',\n  'mixamorigRightUpLeg',\n  'mixamorigRightLeg',\n  'mixamorigRightFoot',\n  'mixamorigLeftUpLeg',\n  'mixamorigLeftLeg',\n  'mixamorigLeftFoot'\n]\n\nconst BVHWEBVIEWR_ID_LIST: string[] = [\n  'head',\n  'neck',\n  'chest',\n  'abdomen',\n  'hip',\n  'rCollar',\n  'rShldr',\n  'rForeArm',\n  'rHand',\n  'lCollar',\n  'lShldr',\n  'lForeArm',\n  'lHand',\n  'rButtock',\n  'rShin',\n  'rFoot',\n  'lButtock',\n  'lShin',\n  'lFoot'\n]\n\nconst TDPT_ID_LIST: string[] = [\n  'Head',\n  'Neck',\n  'Chest',\n  'Spine',\n  'Hips',\n  'RightShoulder',\n  'RightUpperArm',\n  'RightLowerArm',\n  'RightHand',\n  'LeftShoulder',\n  'LeftUpperArm',\n  'LeftLowerArm',\n  'LeftHand',\n  'RightUpperLeg',\n  'RightLowerLeg',\n  'RightFoot',\n  'LeftUpperLeg',\n  'LeftLowerLeg',\n  'LeftFoot'\n]\n\nfunction findTrack (name: string, tracks: THREE.KeyframeTrack[]): THREE.KeyframeTrack | null {\n  for (let i = 0; i < tracks.length; i++) {\n    if (tracks[i].name === name) return tracks[i]\n  }\n  return null\n}\n\nfunction values2quaternion (values: Float32Array, i: number): THREE.Quaternion {\n  return new THREE.Quaternion(\n    values[i * 4],\n    values[i * 4 + 1],\n    values[i * 4 + 2],\n    values[i * 4 + 3]\n  )\n}\n\nfunction createKeys (id: string, tracks: THREE.KeyframeTrack[], isRootMotion = true) {\n  const posTrack = findTrack(`.bones[${id}].position`, tracks)\n  const rotTrack = findTrack(`.bones[${id}].quaternion`, tracks)\n\n  if (!posTrack) return\n  if (!rotTrack) return\n\n  const keys = []\n  const rate = 0.008\n  for (let i = 0; i < posTrack.times.length; i++) {\n    const key: { [name: string]: number | [number, number, number] | [number, number, number, number] } = {}\n\n    key.time = parseInt(`${posTrack.times[i] * 1000}`)\n\n    if (id === 'rButtock' || id === 'lButtock') {\n      const id2 = id === 'rButtock' ? 'rThigh' : 'lThigh'\n      const q1 = values2quaternion(rotTrack.values, i)\n      const rotTrack2 = findTrack(`.bones[${id2}].quaternion`, tracks)\n      if (!rotTrack2) return\n      q1.multiply(values2quaternion(rotTrack2.values, i))\n      key.rot = [-q1.x, q1.y, -q1.z, q1.w]\n    } else {\n      key.rot = [\n        -rotTrack.values[i * 4],\n        rotTrack.values[i * 4 + 1],\n        -rotTrack.values[i * 4 + 2],\n        rotTrack.values[i * 4 + 3]\n      ]\n    }\n\n    if ((id === 'hip' || id === 'Hips') && isRootMotion) {\n      key.pos = [\n        -posTrack.values[i * 3] * rate,\n        posTrack.values[i * 3 + 1] * rate,\n        -posTrack.values[i * 3 + 2] * rate\n      ]\n    }\n\n    keys.push(key)\n  }\n  if (keys.length === 0) return null\n  return keys\n}\n\nenum BVHFormt {\n    BvhWebViewr,\n    Tdpt,\n}\n\nfunction createClip (clip: THREE.AnimationClip, vrm: VRM, isRootMotion = true, bvhFormat: BVHFormt = BVHFormt.Tdpt) {\n  let idList: string[]\n\n  switch (bvhFormat) {\n    case BVHFormt.BvhWebViewr:\n      idList = BVHWEBVIEWR_ID_LIST\n      break\n    case BVHFormt.Tdpt:\n      idList = TDPT_ID_LIST\n      break\n  }\n\n  const bones = BONE_NAME_LIST.map((boneName) => {\n    return vrm.humanoid!.getBoneNode(boneName)\n  })\n    .filter((item): item is NonNullable<typeof item> => item != null)\n    .map(v => v as THREE.Bone)\n\n  const hierarchy = []\n  for (let i = 0; i < idList.length; i++) {\n    const keys = createKeys(idList[i], clip.tracks, isRootMotion)\n    if (keys != null) {\n      hierarchy.push({ keys: keys })\n    }\n  }\n\n  const resClip = THREE.AnimationClip.parseAnimation(\n    { hierarchy: hierarchy },\n    bones\n  )\n\n  resClip.tracks.forEach((track) => {\n    track.name = track.name.replace(\n      /^\\.bones\\[([^\\]]+)\\].(position|quaternion|scale)$/,\n      '$1.$2'\n    )\n  })\n\n  return resClip\n}\n\nfunction mixamoClipToVRMClip (clip: THREE.AnimationClip, vrm: VRM, isRootMotion = true): THREE.AnimationClip {\n  const tracks = clip.tracks\n  const bones = BONE_NAME_LIST.map((boneName) => {\n    return vrm.humanoid!.getBoneNode(boneName)! as THREE.Bone\n  })\n  const hierarchy = []\n  for (const id of MIXAMO_ID_LIST) {\n    const posTrack = findTrack(`${id}.position`, tracks)\n    const rotTrack = findTrack(`${id}.quaternion`, tracks)\n    const keys = []\n    const rate = 0.008\n    if (rotTrack !== null) {\n      for (let i = 0; i < rotTrack.times.length; i++) {\n        const key: { [name: string]: number | [number, number, number] | [number, number, number, number] } = {}\n        key.time = parseInt(`${rotTrack.times[i] * 1000}`)\n        key.rot = [\n          -rotTrack.values[i * 4],\n          rotTrack.values[i * 4 + 1],\n          -rotTrack.values[i * 4 + 2],\n          rotTrack.values[i * 4 + 3]\n        ]\n        if (id === 'mixamorigHips' && posTrack !== null && isRootMotion) {\n          key.pos = [\n            -posTrack.values[i * 3] * rate,\n            posTrack.values[i * 3 + 1] * rate,\n            -posTrack.values[i * 3 + 2] * rate\n          ]\n        }\n        keys.push(key)\n      }\n    }\n    if (keys.length > 0) {\n      hierarchy.push({ keys: keys })\n    }\n  }\n  const resClip = THREE.AnimationClip.parseAnimation({ hierarchy: hierarchy }, bones)\n  resClip.tracks.forEach((track) => {\n    track.name = track.name.replace(\n      /^\\.bones\\[([^\\]]+)\\].(position|quaternion|scale)$/,\n      '$1.$2'\n    )\n  })\n  return resClip\n}\n\nfunction bvhWebViewrClipToVRMClip (clip: THREE.AnimationClip, vrm: VRM, isRootMotion = true): THREE.AnimationClip {\n  return createClip(clip, vrm, isRootMotion, BVHFormt.BvhWebViewr)\n}\n\nfunction tdptClipToVRMClip (clip: THREE.AnimationClip, vrm: VRM, isRootMotion = true): THREE.AnimationClip {\n  return createClip(clip, vrm, isRootMotion, BVHFormt.Tdpt)\n}\n\nexport {\n  mixamoClipToVRMClip,\n  bvhWebViewrClipToVRMClip,\n  tdptClipToVRMClip\n}\n","import * as THREE from 'three'\nimport { VRM } from '@pixiv/three-vrm'\n\nexport enum TurnDirection {\n  Right,\n  Left,\n  None\n}\n\nexport class VRMController {\n  vrm: VRM\n\n  forwardFlug = false\n  forwardAnimation: THREE.AnimationAction | null = null\n\n  turnDirection: TurnDirection = TurnDirection.None\n\n  constructor (vrm: VRM, forwardAnimation: THREE.AnimationAction | null = null) {\n    this.vrm = vrm\n    this.forwardAnimation = forwardAnimation\n  }\n\n  get forwardVector (): {x: number, z: number} {\n    const vec = { x: -Math.sin(this.vrm.scene.rotation.y), z: -Math.cos(this.vrm.scene.rotation.y) }\n    return vec\n  }\n\n  forwardUpdate (speed = 0.025) {\n    if (this.forwardFlug) {\n      const vec = this.forwardVector\n      const xMove = vec.x * speed\n      const zMove = vec.z * speed\n      this.vrm.scene.position.x += xMove\n      this.vrm.scene.position.z += zMove\n    }\n  }\n\n  forwardBegin () {\n    this.forwardFlug = true\n    if (this.forwardAnimation) this.forwardAnimation.play()\n  }\n\n  forwardEnd () {\n    this.forwardFlug = false\n    if (this.forwardAnimation) this.forwardAnimation.stop()\n  }\n\n  turnUpdate (radian: number = 1 * Math.PI / 180) {\n    if (this.turnDirection !== TurnDirection.None) {\n      const isRight = this.turnDirection === TurnDirection.Right\n      let rotY = this.vrm.scene.rotation.y + (isRight ? -radian : radian)\n      if (rotY > 2 * Math.PI) rotY = rotY - 2 * Math.PI\n      this.vrm.scene.rotation.y = rotY\n    }\n  }\n\n  turnBegin (direction: TurnDirection.Right | TurnDirection.Left | 'right' | 'left') {\n    if (typeof direction !== 'string') { this.turnDirection = direction } else {\n      switch (direction) {\n        case 'right':\n          this.turnDirection = TurnDirection.Right\n          break\n        case 'left':\n          this.turnDirection = TurnDirection.Left\n          break\n      }\n    }\n  }\n\n  turnEnd () {\n    this.turnDirection = TurnDirection.None\n  }\n}\n","\nexport function dumpObject (\n  obj: any,\n  lines: string[] = [],\n  isLast = true,\n  prefix = ''\n) {\n  const localPrefix = isLast ? '└─' : '├─'\n  lines.push(\n      `${prefix}${prefix ? localPrefix : ''}${obj.name || '*no-name*'} [${\n        obj.type\n      }]`\n  )\n  const newPrefix = prefix + (isLast ? '  ' : '│ ')\n  const lastNdx = obj.children.length - 1\n  obj.children.forEach((child: any, ndx: number) => {\n    const isLast = ndx === lastNdx\n    dumpObject(child, lines, isLast, newPrefix)\n  })\n  return lines\n}\n","import { VRMPose, VRMSchema, RawVector4, VRM } from '@pixiv/three-vrm'\nimport { Quaternion, Euler, MathUtils } from 'three'\nimport idolJson from '../../asset/idol.json'\n\nexport type Type = (elapsed: number) => VRMPose\n\nexport const sayHello: Type = (elapsed) => ({\n  [VRMSchema.HumanoidBoneName.LeftUpperLeg]: {\n    rotation: [0.0, 0.0, -0.1, 1]\n  },\n  [VRMSchema.HumanoidBoneName.LeftUpperArm]: {\n    rotation: new Quaternion()\n      .setFromEuler(\n        new Euler(\n          0,\n          0,\n          cosineRepeation(-Math.PI / 4, Math.PI / 4, Math.PI / 4)(elapsed),\n          'XYZ'\n        )\n      )\n      .toArray() as RawVector4\n  },\n  [VRMSchema.HumanoidBoneName.LeftLowerArm]: {\n    rotation: new Quaternion()\n      .setFromEuler(\n        new Euler(\n          cosineRepeation(0, Math.PI / 1.3)(elapsed),\n          0,\n          cosineRepeation(0, Math.PI / 8)(elapsed),\n          'XYZ'\n        )\n      )\n      .toArray() as RawVector4\n  },\n  [VRMSchema.HumanoidBoneName.RightUpperArm]: {\n    rotation: new Quaternion()\n      .setFromEuler(new Euler(0, 0, -Math.PI / 4, 'XYZ'))\n      .toArray() as RawVector4\n  },\n  [VRMSchema.HumanoidBoneName.RightLowerArm]: {\n    rotation: new Quaternion()\n      .setFromEuler(new Euler(0, 0, -Math.PI / 2.3, 'XYZ'))\n      .toArray() as RawVector4\n  },\n  [VRMSchema.HumanoidBoneName.LeftHand]: {\n    rotation: new Quaternion()\n      .setFromEuler(\n        new Euler(cosineRepeation(-Math.PI / 6, 0, 0)(elapsed), 0, 0, 'XYZ')\n      )\n      .toArray() as RawVector4\n  },\n  [VRMSchema.HumanoidBoneName.LeftShoulder]: {\n    rotation: new Quaternion()\n      .setFromEuler(\n        new Euler(0, 0, cosineRepeation(-Math.PI / 6, 0, 0)(elapsed), 'XYZ')\n      )\n      .toArray() as RawVector4,\n    position: [\n      cosineRepeation(-0.025, 0, 0)(elapsed),\n      cosineRepeation(0, 0.08)(elapsed),\n      0\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.UpperChest]: {\n    position: [cosineRepeation(0, 0.02)(elapsed), 0, 0]\n  },\n  [VRMSchema.HumanoidBoneName.Neck]: {\n    rotation: new Quaternion()\n      .setFromEuler(\n        new Euler(0, 0, cosineRepeation(-Math.PI / 24, 0, 0)(elapsed), 'XYZ')\n      )\n      .toArray() as RawVector4\n  }\n})\n\nexport const standOnOneLeg: Type = (elapsed) => ({\n  [VRMSchema.HumanoidBoneName.LeftUpperLeg]: {\n    rotation: new Quaternion()\n      .setFromEuler(new Euler(-Math.PI / 6, 0, 0, 'XYZ'))\n      .toArray() as RawVector4\n  },\n  [VRMSchema.HumanoidBoneName.LeftLowerLeg]: {\n    rotation: new Quaternion()\n      .setFromEuler(\n        new Euler(cosineRepeation(-Math.PI / 2, 0, 0)(elapsed), 0, 0, 'XYZ')\n      )\n      .toArray() as RawVector4\n  },\n  [VRMSchema.HumanoidBoneName.LeftUpperArm]: {\n    rotation: new Quaternion()\n      .setFromEuler(\n        new Euler(\n          0,\n          0,\n          cosineRepeation(0, Math.PI / 15, Math.PI / 24, 1.5)(elapsed),\n          'XYZ'\n        )\n      )\n      .toArray() as RawVector4\n  },\n  [VRMSchema.HumanoidBoneName.RightUpperArm]: {\n    rotation: new Quaternion()\n      .setFromEuler(\n        new Euler(\n          0,\n          0,\n          cosineRepeation(-Math.PI / 15, 0, -Math.PI / 24, 1.5)(elapsed),\n          'XYZ'\n        )\n      )\n      .toArray() as RawVector4\n  }\n})\nexport function cosineRepeation (\n  min: number,\n  max: number,\n  start: number = min,\n  frequency = 1, // 2πf\n  increasingInitially = true\n) {\n  const l = (max - min) / 2 // amplitude\n  const k = -1 + (start - min) / l // relative y coordinate\n  const xIntercept = Math.acos(k) * (increasingInitially ? -1 : 1)\n  return (elapsed: number) =>\n    l * Math.cos(frequency * (elapsed - xIntercept)) + min + l\n}\n\nexport const stand: VRMPose = {\n  [VRMSchema.HumanoidBoneName.LeftUpperArm]: {\n    rotation: [0, 0, Math.PI / 2 - 1, 0.8]\n  },\n  [VRMSchema.HumanoidBoneName.LeftHand]: {\n    rotation: [0, 0, 0.1, 0]\n  },\n  [VRMSchema.HumanoidBoneName.RightUpperArm]: {\n    rotation: [0, 0, -(Math.PI / 2 - 1), 0.8]\n  },\n  [VRMSchema.HumanoidBoneName.RightHand]: {\n    rotation: [0, 0, -0.1, 0]\n  }\n}\nexport const ya: VRMPose = {\n  [VRMSchema.HumanoidBoneName.Chest]: {\n    rotation: [\n      0.013312335656517259,\n      0,\n      0,\n      0.9999113869335464\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.Head]: {\n    rotation: [\n      0.08603210708144307,\n      0,\n      0,\n      0.9962923649969055\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.Hips]: {\n    rotation: [\n      -0.1787955102350469,\n      -0.0006303832762068233,\n      -0.00965300399150735,\n      0.983838700016753\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.Jaw]: {\n    rotation: [\n      0,\n      0,\n      0,\n      1\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftEye]: {\n    rotation: [\n      -0.0037995237082412664,\n      0.0006996440932298325,\n      0.0000026583341586324724,\n      0.9999925370274854\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftFoot]: {\n    rotation: [\n      -0.0719891841574704,\n      -0.00011644688831157979,\n      0.09214837874308693,\n      0.993139577350276\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftHand]: {\n    rotation: [\n      -0.48262051769102926,\n      -0.23455124243260098,\n      -0.33804179564770753,\n      0.7731693831058236\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftIndexDistal]: {\n    rotation: [\n      0,\n      0,\n      -0.06199846955623789,\n      0.99807624446867\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftIndexIntermediate]: {\n    rotation: [\n      0,\n      0,\n      -0.022327864296377356,\n      0.9997507021632758\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftIndexProximal]: {\n    rotation: [\n      0.019577435593636682,\n      -0.22062120482851355,\n      -0.08619510260816965,\n      0.9713461856011787\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftLittleDistal]: {\n    rotation: [\n      0.1568558064757093,\n      0.21174499192527432,\n      0.6914503730233792,\n      0.6726490139851915\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftLittleIntermediate]: {\n    rotation: [\n      0,\n      0,\n      0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftLittleProximal]: {\n    rotation: [\n      0,\n      0,\n      0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftLowerArm]: {\n    rotation: [\n      0.15014114940567497,\n      -0.8816663724971838,\n      -0.17114475186643008,\n      0.41331769472329405\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftLowerLeg]: {\n    rotation: [\n      0.101996813833097,\n      -0.06073768097746058,\n      0.04548069263383802,\n      0.9918866319670424\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftMiddleDistal]: {\n    rotation: [\n      0,\n      0,\n      -0.1027875159593063,\n      0.9947033359564627\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftMiddleIntermediate]: {\n    rotation: [\n      0,\n      0,\n      -0.03560914475372165,\n      0.9993657932958825\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftMiddleProximal]: {\n    rotation: [\n      -0.0025998890083756806,\n      0.026237604050329804,\n      -0.05001800865324346,\n      0.9984002341351922\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftRingDistal]: {\n    rotation: [\n      0.020109773358269148,\n      -0.04606801784897169,\n      0.7056045193530629,\n      0.7068207672497173\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftRingIntermediate]: {\n    rotation: [\n      0,\n      0,\n      0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftRingProximal]: {\n    rotation: [\n      0,\n      0,\n      0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftShoulder]: {\n    rotation: [\n      0.1416311442987345,\n      0.0904641108365223,\n      -0.08532359812541815,\n      0.9820777704530943\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftThumbDistal]: {\n    rotation: [\n      -0.2352667891960039,\n      0.5120312942050936,\n      -0.08042272363114115,\n      0.8221956441017001\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftThumbIntermediate]: {\n    rotation: [\n      -0.19526587838834705,\n      0.19936097888560989,\n      0.05132514215627221,\n      0.9589015416702786\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftThumbProximal]: {\n    rotation: [\n      0.015117549045717915,\n      0.2785812214774047,\n      0.05203494511926526,\n      0.9588828537613147\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftToes]: {\n    rotation: [\n      0,\n      0,\n      0,\n      1\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftUpperArm]: {\n    rotation: [\n      -0.054249922679614884,\n      -0.0065674090566263405,\n      0.2014869041030883,\n      0.9779656652983743\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftUpperLeg]: {\n    rotation: [\n      0.14315069053414078,\n      -0.03734612774500221,\n      -0.12229065543455768,\n      0.9814062064891576\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.Neck]: {\n    rotation: [\n      0.03285559817912266,\n      0,\n      0,\n      0.9994601090930505\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightEye]: {\n    rotation: [\n      -0.0037995237082412664,\n      0.0006996440932298325,\n      0.0000026583341586324724,\n      0.9999925370274854\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightFoot]: {\n    rotation: [\n      -0.03907695905255129,\n      -0.0008255420430454642,\n      -0.11766650914369643,\n      0.9922836803946122\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightHand]: {\n    rotation: [\n      -0.3648952912507807,\n      0.22209242565390008,\n      0.34572205926338695,\n      0.8354655221066025\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightIndexDistal]: {\n    rotation: [\n      0.05330036017931064,\n      -0.003294151309216382,\n      0.06159782908638367,\n      0.9966714241031256\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightIndexIntermediate]: {\n    rotation: [\n      0,\n      0,\n      0.032965166168983304,\n      0.9994565012142607\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightIndexProximal]: {\n    rotation: [\n      0.026816887596401728,\n      0.2260805294594699,\n      0.11469751744390717,\n      0.9669606652967703\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightLittleDistal]: {\n    rotation: [\n      0,\n      0,\n      -0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightLittleIntermediate]: {\n    rotation: [\n      0,\n      0,\n      -0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightLittleProximal]: {\n    rotation: [\n      0,\n      0,\n      -0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightLowerArm]: {\n    rotation: [\n      0.0980385223202602,\n      0.8576360056190542,\n      0.24170309142555277,\n      0.4432026010780897\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightLowerLeg]: {\n    rotation: [\n      0.0783724729201963,\n      0.08769430161608016,\n      -0.051711596735022056,\n      0.9917123452471263\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightMiddleDistal]: {\n    rotation: [\n      0,\n      0,\n      0.08026455767348724,\n      0.9967735955478955\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightMiddleIntermediate]: {\n    rotation: [\n      0,\n      0,\n      0.025254406039762072,\n      0.9996810566253513\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightMiddleProximal]: {\n    rotation: [\n      0.0015431107204760663,\n      -0.01552789257243461,\n      0.09887755580983747,\n      0.9949772521613929\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightRingDistal]: {\n    rotation: [\n      -0.03493325772154775,\n      0.02278703462818298,\n      -0.699902223950215,\n      0.7130198422676309\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightRingIntermediate]: {\n    rotation: [\n      0,\n      0,\n      -0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightRingProximal]: {\n    rotation: [\n      0,\n      0,\n      -0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightShoulder]: {\n    rotation: [\n      0.13194869733304632,\n      -0.06703368359244954,\n      0.0969867894052314,\n      0.984220295064578\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightThumbDistal]: {\n    rotation: [\n      -0.2641501833322756,\n      -0.27212364333005323,\n      -0.11376620464754332,\n      0.9182759139095377\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightThumbIntermediate]: {\n    rotation: [\n      -0.26279511809487904,\n      -0.2786395210745717,\n      0.0077608225630609925,\n      0.9237091061768182\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightThumbProximal]: {\n    rotation: [\n      -0.0005566764027957766,\n      -0.204426535127855,\n      -0.12281526488418068,\n      0.9711466895162806\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightToes]: {\n    rotation: [\n      0,\n      0,\n      0,\n      1\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightUpperArm]: {\n    rotation: [\n      -0.002887290224523551,\n      0.020920173916083078,\n      -0.19892652980644696,\n      0.9797868368260746\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightUpperLeg]: {\n    rotation: [\n      0.15993408243472299,\n      0.04378077515654895,\n      0.16933006858020277,\n      0.9715099901066786\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.Spine]: {\n    rotation: [\n      0.003995954348490826,\n      0,\n      0,\n      0.9999920161425515\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.UpperChest]: {\n    rotation: [\n      0.07135642314924895,\n      0,\n      0,\n      0.9974508814349433\n    ]\n  }\n}\n\nexport const kira: VRMPose = {\n  ...stand,\n  [VRMSchema.HumanoidBoneName.LeftThumbProximal]: {\n    rotation: new Quaternion().setFromEuler(new Euler(0, MathUtils.degToRad(20), 0)).toArray() as RawVector4\n  },\n  [VRMSchema.HumanoidBoneName.Chest]: {\n    rotation: [\n      0.013312335656517259,\n      0,\n      0,\n      0.9999113869335464\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.Head]: {\n    rotation: [\n      0.08603210708144307,\n      0,\n      0,\n      0.9962923649969055\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.Hips]: {\n    rotation: [\n      -0.1787955102350469,\n      -0.0006303832762068233,\n      -0.00965300399150735,\n      0.983838700016753\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.Jaw]: {\n    rotation: [\n      0,\n      0,\n      0,\n      1\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftEye]: {\n    rotation: [\n      -0.0037995237082412664,\n      0.0006996440932298325,\n      0.0000026583341586324724,\n      0.9999925370274854\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftFoot]: {\n    rotation: [\n      -0.0719891841574704,\n      -0.00011644688831157979,\n      0.09214837874308693,\n      0.993139577350276\n    ]\n  },\n\n  [VRMSchema.HumanoidBoneName.LeftToes]: {\n    rotation: [\n      0,\n      0,\n      0,\n      1\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftUpperLeg]: {\n    rotation: [\n      0.14315069053414078,\n      -0.03734612774500221,\n      -0.12229065543455768,\n      0.9814062064891576\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.Neck]: {\n    rotation: [\n      0.03285559817912266,\n      0,\n      0,\n      0.9994601090930505\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightEye]: {\n    rotation: [\n      -0.0037995237082412664,\n      0.0006996440932298325,\n      0.0000026583341586324724,\n      0.9999925370274854\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightFoot]: {\n    rotation: [\n      -0.03907695905255129,\n      -0.0008255420430454642,\n      -0.11766650914369643,\n      0.9922836803946122\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightHand]: {\n    rotation: [\n      -0.3648952912507807,\n      0.22209242565390008,\n      0.34572205926338695,\n      0.8354655221066025\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightIndexDistal]: {\n    rotation: [\n      0.05330036017931064,\n      -0.003294151309216382,\n      0.06159782908638367,\n      0.9966714241031256\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightIndexIntermediate]: {\n    rotation: [\n      0,\n      0,\n      0.032965166168983304,\n      0.9994565012142607\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightIndexProximal]: {\n    rotation: [\n      0.026816887596401728,\n      0.2260805294594699,\n      0.11469751744390717,\n      0.9669606652967703\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightLittleDistal]: {\n    rotation: [\n      0,\n      0,\n      -0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightLittleIntermediate]: {\n    rotation: [\n      0,\n      0,\n      -0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightLittleProximal]: {\n    rotation: [\n      0,\n      0,\n      -0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightLowerArm]: {\n    rotation: [\n      0.0980385223202602,\n      0.8576360056190542,\n      0.24170309142555277,\n      0.4432026010780897\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightLowerLeg]: {\n    rotation: [\n      0.0783724729201963,\n      0.08769430161608016,\n      -0.051711596735022056,\n      0.9917123452471263\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightMiddleDistal]: {\n    rotation: [\n      0,\n      0,\n      0.08026455767348724,\n      0.9967735955478955\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightMiddleIntermediate]: {\n    rotation: [\n      0,\n      0,\n      0.025254406039762072,\n      0.9996810566253513\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightMiddleProximal]: {\n    rotation: [\n      0.0015431107204760663,\n      -0.01552789257243461,\n      0.09887755580983747,\n      0.9949772521613929\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightRingDistal]: {\n    rotation: [\n      -0.03493325772154775,\n      0.02278703462818298,\n      -0.699902223950215,\n      0.7130198422676309\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightRingIntermediate]: {\n    rotation: [\n      0,\n      0,\n      -0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightRingProximal]: {\n    rotation: [\n      0,\n      0,\n      -0.7071067811865476,\n      0.7071067811865476\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightShoulder]: {\n    rotation: [\n      0.13194869733304632,\n      -0.06703368359244954,\n      0.0969867894052314,\n      0.984220295064578\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightThumbDistal]: {\n    rotation: [\n      -0.2641501833322756,\n      -0.27212364333005323,\n      -0.11376620464754332,\n      0.9182759139095377\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightThumbIntermediate]: {\n    rotation: [\n      -0.26279511809487904,\n      -0.2786395210745717,\n      0.0077608225630609925,\n      0.9237091061768182\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightThumbProximal]: {\n    rotation: [\n      -0.0005566764027957766,\n      -0.204426535127855,\n      -0.12281526488418068,\n      0.9711466895162806\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightToes]: {\n    rotation: [\n      0,\n      0,\n      0,\n      1\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightUpperArm]: {\n    rotation: [\n      -0.002887290224523551,\n      0.020920173916083078,\n      -0.19892652980644696,\n      0.9797868368260746\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.RightUpperLeg]: {\n    rotation: [\n      0.15993408243472299,\n      0.04378077515654895,\n      0.16933006858020277,\n      0.9715099901066786\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.Spine]: {\n    rotation: [\n      0.003995954348490826,\n      0,\n      0,\n      0.9999920161425515\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.UpperChest]: {\n    rotation: [\n      0.07135642314924895,\n      0,\n      0,\n      0.9974508814349433\n    ]\n  },\n  [VRMSchema.HumanoidBoneName.LeftUpperArm]: {\n    rotation: [0, 0, Math.PI / 2 - 1, 0.8]\n  },\n  [VRMSchema.HumanoidBoneName.LeftHand]: {\n    rotation: [0, 0, 0.1, 0]\n  }\n}\nexport const allPose = {\n  stand,\n  sayHello,\n  standOnOneLeg,\n  ya,\n  kira,\n  stand2: idolJson\n}\nexport const getPose = (targetName: keyof typeof allPose) => {\n  const pose = allPose[targetName]\n  return typeof pose === 'function' ? pose : () => pose\n}\n","import { VRMSchema } from '@pixiv/three-vrm'\n\nexport const blendShapes = Object.values(VRMSchema.BlendShapePresetName) as VRMSchema.BlendShapePresetName[]\n","import {\n  AnimationMixer,\n  Camera,\n  Clock,\n  DirectionalLight,\n  MathUtils,\n  PerspectiveCamera,\n  Scene,\n  Vector3,\n  WebGLRenderer\n} from 'three'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { VRM, VRMSchema, VRMUtils } from '@pixiv/three-vrm'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { Sky } from 'three/examples/jsm/objects/Sky'\nimport { GUI } from 'dat.gui'\nimport gltf from '../../asset/vrm/girl.vrm'\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader'\nimport { mixamoClipToVRMClip } from '../vrm/clip'\nimport { VRMController } from '../vrm/controller'\n// import walkingfbx from '../../asset/np.fbx'\nimport { dumpObject } from '../util'\nimport { allPose, getPose } from '../vrm/pose'\nimport { blendShapes } from '@/vrm/blendshape'\n\nexport const main = async () => {\n  const { scene, renderer, controls, camera, clock } = init()\n  const loader = new GLTFLoader()\n  loader.crossOrigin = 'anonymous'\n  const gltfmodel = await loader.loadAsync(gltf)\n  console.log(dumpObject(gltfmodel.scene).join('\\n'))\n  VRMUtils.removeUnnecessaryVertices(gltfmodel.scene)\n  VRMUtils.removeUnnecessaryJoints(gltfmodel.scene)\n  const vrm = await VRM.from(gltfmodel)\n  initBlendShapeController(vrm, clock)\n  initPoseController(vrm, clock)\n  listenCameraPosKey(camera)\n\n  scene.add(vrm.scene)\n  vrm.scene.rotation.y += Math.PI\n  const currentVrm = vrm\n  console.log(currentVrm)\n  vrm.springBoneManager?.reset()\n  const render = () => {\n    const deltaTime = clock.getDelta()\n    requestAnimationFrame(render)\n    controls.update()\n    currentVrm.update(deltaTime)\n    renderer.render(scene, camera)\n  }\n  render()\n  // animate\n  // await initAnimation(vrm, renderer, clock, currentVrm, controls, scene, camera)\n  // controls.addEventListener('change', requestRenderIfNotRequested)\n}\n\nfunction initSkyboxController (scene: Scene, renderer: WebGLRenderer, camera: Camera) {\n  // Add Sky\n  const sky = new Sky()\n  sky.scale.setScalar(450000)\n  scene.add(sky)\n\n  const sun = new Vector3()\n\n  /// GUI\n\n  const effectController = {\n    turbidity: 10,\n    rayleigh: 3,\n    mieCoefficient: 0.005,\n    mieDirectionalG: 0.7,\n    elevation: 2,\n    azimuth: 180,\n    exposure: renderer.toneMappingExposure,\n    blendShape: VRMSchema.BlendShapePresetName.Fun\n  }\n\n  function guiChanged () {\n    const uniforms = sky.material.uniforms\n    uniforms.turbidity.value = effectController.turbidity\n    uniforms.rayleigh.value = effectController.rayleigh\n    uniforms.mieCoefficient.value = effectController.mieCoefficient\n    uniforms.mieDirectionalG.value = effectController.mieDirectionalG\n\n    const phi = MathUtils.degToRad(90 - effectController.elevation)\n    const theta = MathUtils.degToRad(effectController.azimuth)\n\n    sun.setFromSphericalCoords(1, phi, theta)\n\n    uniforms.sunPosition.value.copy(sun)\n\n    renderer.toneMappingExposure = effectController.exposure\n    renderer.render(scene, camera)\n  }\n\n  const gui = new GUI()\n\n  gui.add(effectController, 'turbidity', 0.0, 20.0, 0.1).onChange(guiChanged)\n  gui.add(effectController, 'rayleigh', 0.0, 4, 0.001).onChange(guiChanged)\n  gui\n    .add(effectController, 'mieCoefficient', 0.0, 0.1, 0.001)\n    .onChange(guiChanged)\n  gui\n    .add(effectController, 'mieDirectionalG', 0.0, 1, 0.001)\n    .onChange(guiChanged)\n  gui.add(effectController, 'elevation', 0, 90, 0.1).onChange(guiChanged)\n  gui.add(effectController, 'azimuth', -180, 180, 0.1).onChange(guiChanged)\n  gui.add(effectController, 'exposure', 0, 1, 0.0001).onChange(guiChanged)\n  guiChanged()\n}\n\nexport const initBlendShapeController = (vrm: VRM, clock: Clock) => {\n  const unknown = VRMSchema.BlendShapePresetName.Unknown\n  const store = {\n    blendShape: VRMSchema.BlendShapePresetName.Joy,\n    blendShape2: unknown\n  }\n\n  const gui = new GUI()\n  const availableBlendShapes = blendShapes.filter(key => key in (vrm.blendShapeProxy?.blendShapePresetMap ?? {}))\n  availableBlendShapes.push(unknown)\n  const onchange = () => {\n    availableBlendShapes.forEach(blendshape => {\n      vrm.blendShapeProxy?.setValue(blendshape, 0)\n    })\n  }\n  gui.add(store, 'blendShape', availableBlendShapes).onChange(onchange)\n  gui.add(store, 'blendShape2', availableBlendShapes).onChange(onchange)\n  const render = () => {\n    requestAnimationFrame(render)\n    const v = Math.sin(Math.PI * clock.elapsedTime) * 0.5 + 0.5;\n    [store.blendShape, store.blendShape2]\n      .filter(v => v !== unknown)\n      .forEach(item => vrm.blendShapeProxy?.setValue(item, v))\n  }\n  render()\n}\nexport const listenCameraPosKey = (camera: PerspectiveCamera) => {\n  let isUp = false\n  let isDown = false\n  window.addEventListener('keydown', (e) => {\n    switch (e.code) {\n      case 'ArrowUp':\n      case 'KeyW':\n        isUp = true\n        break\n      case 'ArrowDown':\n      case 'KeyS':\n        isDown = true\n        break\n    }\n  })\n  window.addEventListener('keyup', (e) => {\n    switch (e.code) {\n      case 'ArrowUp':\n      case 'KeyW':\n        isUp = false\n        break\n      case 'ArrowDown':\n      case 'KeyS':\n        isDown = false\n        break\n    }\n  })\n  const render = () => {\n    requestAnimationFrame(render)\n    const step = 0.03\n    if (isDown) {\n      camera.position.y -= step\n    }\n    if (isUp) {\n      camera.position.y += step\n    }\n  }\n  render()\n}\n\nexport const initPoseController = (vrm: VRM, clock: Clock) => {\n  const store: { pose: keyof typeof allPose } = {\n    pose: 'kira'\n  }\n\n  vrm.humanoid?.setPose(getPose(store.pose)(0))\n  const gui = new GUI()\n  gui.add(store, 'pose', Object.keys(allPose)).onChange(() => vrm.humanoid?.resetPose())\n  const render = () => {\n    requestAnimationFrame(render)\n    vrm.humanoid?.setPose(getPose(store.pose)(clock.elapsedTime))\n  }\n  render()\n}\n\nasync function initAnimation (vrm: VRM, renderer: WebGLRenderer, clock: Clock, currentVrm: VRM, controls: OrbitControls, scene: Scene, camera: PerspectiveCamera) {\n  const mixer: AnimationMixer = await initFbxAnimation(vrm)\n\n  let renderRequested = false\n\n  renderer.setAnimationLoop(() => {\n    requestRenderIfNotRequested()\n    const deltaTime = clock.getDelta()\n    if (currentVrm) {\n      currentVrm.update(deltaTime)\n      // controller.forwardUpdate()\n      // controller.turnUpdate()\n      // currentVrm.humanoid!.setPose(getPose('standOnOneLeg')(clock.elapsedTime))\n      if (mixer) {\n        mixer.update(clock.getDelta())\n      }\n    }\n  })\n  function animate () {\n    renderRequested = false\n    controls.update()\n    renderer.render(scene, camera)\n  }\n  animate()\n  function requestRenderIfNotRequested () {\n    if (!renderRequested) {\n      renderRequested = true\n      requestAnimationFrame(animate)\n    }\n  }\n}\n\nasync function initFbxAnimation (vrm: VRM) {\n  const fbxLoader = new FBXLoader()\n  const walkFbx = await fbxLoader.loadAsync('')// walkingfbx)\n  const walkClip = mixamoClipToVRMClip(walkFbx.animations[0], vrm, false)\n  walkClip.name = 'walk'\n  const mixer: AnimationMixer = new AnimationMixer(vrm.scene)\n  const walk = mixer.clipAction(walkClip).setEffectiveWeight(1.0)\n  walk.clampWhenFinished = true\n  const controller = new VRMController(vrm, walk)\n  return mixer\n}\n\nfunction init () {\n  const renderer = new WebGLRenderer()\n  renderer.setSize(window.innerWidth, window.innerHeight)\n  renderer.setPixelRatio(window.devicePixelRatio)\n  document.body.appendChild(renderer.domElement)\n\n  // camera\n  const camera = new PerspectiveCamera(\n    30.0,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    20.0\n  )\n\n  camera.position.set(0.0, 1.0, 4)\n\n  window.addEventListener('resize', () => {\n    camera.aspect = window.innerWidth / window.innerHeight\n    camera.updateProjectionMatrix()\n\n    renderer.setSize(window.innerWidth, window.innerHeight)\n  })\n\n  // camera controls\n  const controls = new OrbitControls(camera, renderer.domElement)\n  controls.enableDamping = true\n  controls.target.set(0.0, 1, 0.0)\n  controls.update()\n\n  // scene\n  const scene = new Scene()\n\n  // light\n  const light = new DirectionalLight(0xffffff)\n  light.position.set(1.0, 1.0, 1.0).normalize()\n  scene.add(light)\n\n  initSkyboxController(scene, renderer, camera)\n  const clock = new Clock()\n  return { scene, renderer, controls, camera, clock }\n}\n","import { defineComponent } from 'vue'\nimport { main } from './3d'\n\nexport const App = defineComponent({\n  async setup () {\n    main()\n  }\n})\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import { createApp } from 'vue'\nimport { App } from './app'\nimport './registerServiceWorker'\nimport './app.scss'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkextendable_viewer\"] = self[\"webpackChunkextendable_viewer\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(6037); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["module","exports","VRMSchema","BVHFormt","TurnDirection","dumpObject","obj","lines","isLast","prefix","localPrefix","push","name","type","newPrefix","lastNdx","children","length","forEach","child","ndx","sayHello","elapsed","rotation","Quaternion","setFromEuler","Euler","cosineRepeation","Math","PI","toArray","position","standOnOneLeg","min","max","start","frequency","increasingInitially","l","k","xIntercept","acos","cos","stand","ya","kira","MathUtils","allPose","stand2","idolJson","getPose","targetName","pose","blendShapes","Object","values","main","async","scene","renderer","controls","camera","clock","init","loader","GLTFLoader","crossOrigin","gltfmodel","loadAsync","gltf","console","log","join","VRMUtils","vrm","VRM","initBlendShapeController","initPoseController","listenCameraPosKey","add","y","currentVrm","springBoneManager","reset","render","deltaTime","getDelta","requestAnimationFrame","update","initSkyboxController","sky","Sky","scale","setScalar","sun","Vector3","effectController","turbidity","rayleigh","mieCoefficient","mieDirectionalG","elevation","azimuth","exposure","toneMappingExposure","blendShape","guiChanged","uniforms","material","value","phi","theta","setFromSphericalCoords","sunPosition","copy","gui","GUI","onChange","unknown","store","blendShape2","availableBlendShapes","filter","key","blendShapeProxy","blendShapePresetMap","onchange","blendshape","setValue","v","sin","elapsedTime","item","isUp","isDown","window","addEventListener","e","code","step","humanoid","setPose","keys","resetPose","WebGLRenderer","setSize","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","document","body","appendChild","domElement","PerspectiveCamera","set","aspect","updateProjectionMatrix","OrbitControls","enableDamping","target","Scene","light","DirectionalLight","normalize","Clock","App","defineComponent","register","ready","registered","cached","updatefound","updated","offline","error","createApp","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","prop","prototype","hasOwnProperty","call","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}